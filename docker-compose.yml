version: '3.8'

services:
#  frontend:
#    build:
#      context: ./data_alchemy_fe
#      dockerfile: Dockerfile
#    volumes:
#      - ./data_alchemy_fe:/app
#      - /app/node_modules
#    ports:
#      - "5173:5173"
#    environment:
#      - VITE_API_URL=http://localhost:8000
#    depends_on:
#      - backend
#    networks:
#      - data_alchemy
#  backend:
#    build:
#      context: ./data_alchemy_be
#      dockerfile: Dockerfile
#    volumes:
#      - ./data_alchemy_be:/code
#    ports:
#      - "8000:8000"
#    env_file:
#      - .env
#    depends_on:
#      - db
#      - redis
#    networks:
#      - data_alchemy
#    command: python manage.py runserver 0.0.0.0:8000

  celery_worker:
    build:
      context: ./data_alchemy_be
      dockerfile: Dockerfile
    command: celery -A data_alchemy_be worker --loglevel=info --concurrency=2 -Q default,data_processing,exports3
    volumes:
      - ./data_alchemy_be:/code
      - ./data_alchemy_be/media:/code/media
      - ./data_alchemy_be/exports:/code/exports
    environment:
      - PYTHONPATH=/code
      - DB_NAME=data_alchemy
      - DB_USER=postgres  # Different database user for Celery
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
#      - backend
      - redis
      - db
    networks:
      - data_alchemy

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - data_alchemy

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
        - data_alchemy

volumes:
  postgres_data:
  redis_data:

networks:
  data_alchemy:
    driver: bridge
